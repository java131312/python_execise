
g
      1 可变参数
      2   在Python函数中，还可以定义可变参数，顾名思义， 可变参数就是传入的参数个数是可变的。
      3 参数是列表的是可变参数
i

def calc(numbers):
	sum = 0
	for n in numbers:
		sum = sum + n*n
i	return sum~      

> def calc(numbers):
...     sum = 0
...     for n in numbers:
...             sum = sum + n * n
...     return sum
... 
>>> calc([1,2,3])
14
>>> calc((1,3,5,7))


所以，我们把函数的参数改为可变参数：

def calc(*numbers):
    sum = 0
    for n in numbers:
        sum = sum + n * n
    return sum
定义可变参数和定义一个list或tuple参数相比，仅仅在参数前面加了一个*号。在函数内部，参数numbers接收到的是一个tuple，因此，函数代码完全不变。但是，调用该函数时，可以传入任意个参数，包括0个参数：

>>> calc(1, 2)
5
>>> calc()
0
如果已经有一个list或者tuple，要调用一个可变参数怎么办？可以这样做：

>>> nums = [1, 2, 3]
>>> calc(nums[0], nums[1], nums[2])
14
这种写法当然是可行的，问题是太繁琐，所以Python允许你在list或tuple前面加一个*号，把list或tuple的元素变成可变参数传进去：

>>> nums = [1, 2, 3]
>>> calc(*nums)
14
*nums表示把nums这个list的所有元素作为可变参数传进去。这种写法相当有用，而且很常见。

关键字参数
*nums表示把nums这个list的所有元素作为可变参数传进去。这种写法相当有用，而且很常见。                               
